<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/KSReachability.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/KSReachability</TokenIdentifier>
			<Abstract>Monitors network connectivity.</Abstract>
			<DeclaredIn>KSReachability.h</DeclaredIn>
			
			<NodeRef refid="1"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/KSReachability/reachabilityToHost:</TokenIdentifier>
			<Abstract>Reachability to a specific host. Returns nil if an initialization error occurs.</Abstract>
			<DeclaredIn>KSReachability.h</DeclaredIn>			
			
			<Declaration>+ (KSReachability *)reachabilityToHost:(NSString *)hostname</Declaration>
			<Parameters>
				<Parameter>
					<Name>hostname</Name>
					<Abstract>The name or IP address of the host to monitor. If nil or
empty string, check reachability to the internet in general.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/reachabilityToHost:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/KSReachability/reachabilityToLocalNetwork</TokenIdentifier>
			<Abstract>Reachability to the local (wired or wifi) network. Returns nil if an initialization error occurs.</Abstract>
			<DeclaredIn>KSReachability.h</DeclaredIn>			
			
			<Declaration>+ (KSReachability *)reachabilityToLocalNetwork</Declaration>
			
			
			<Anchor>//api/name/reachabilityToLocalNetwork</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KSReachability/hostname</TokenIdentifier>
			<Abstract>The host we are monitoring reachability to, if any.</Abstract>
			<DeclaredIn>KSReachability.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly, retain) NSString *hostname</Declaration>
			
			
			<Anchor>//api/name/hostname</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KSReachability/onInitializationComplete</TokenIdentifier>
			<Abstract>If non-nil, called when the KSReachability object has finished initializing.
If initialization has already completed, calls on the next main thread run loop.
This block will only be called once, and then discarded (released).
Block will be invoked on the main thread.</Abstract>
			<DeclaredIn>KSReachability.h</DeclaredIn>			
			
			<Declaration>@property (atomic, readwrite, copy) KSReachabilityCallback onInitializationComplete</Declaration>
			
			
			<Anchor>//api/name/onInitializationComplete</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KSReachability/onReachabilityChanged</TokenIdentifier>
			<Abstract>If non-nil, called whenever reachability flags change.
Block will be invoked on the main thread.</Abstract>
			<DeclaredIn>KSReachability.h</DeclaredIn>			
			
			<Declaration>@property (atomic, readwrite, copy) KSReachabilityCallback onReachabilityChanged</Declaration>
			
			
			<Anchor>//api/name/onReachabilityChanged</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KSReachability/notificationName</TokenIdentifier>
			<Abstract>The notification to send when reachability changes (nil = don't send).
Default = nil</Abstract>
			<DeclaredIn>KSReachability.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, retain) NSString *notificationName</Declaration>
			
			
			<Anchor>//api/name/notificationName</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KSReachability/flags</TokenIdentifier>
			<Abstract>The current reachability flags.
This property will always report 0 while "initialized" property = NO.</Abstract>
			<DeclaredIn>KSReachability.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly, assign) SCNetworkReachabilityFlags flags</Declaration>
			
			
			<Anchor>//api/name/flags</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KSReachability/reachable</TokenIdentifier>
			<Abstract>Whether the host is reachable or not.
This property will always report NO while "initialized" property = NO.</Abstract>
			<DeclaredIn>KSReachability.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly, assign) BOOL reachable</Declaration>
			
			
			<Anchor>//api/name/reachable</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KSReachability/WWANOnly</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>KSReachability.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly, assign) BOOL WWANOnly</Declaration>
			
			
			<Anchor>//api/name/WWANOnly</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KSReachability/initialized</TokenIdentifier>
			<Abstract>If YES, this object's status properties are valid.</Abstract>
			<DeclaredIn>KSReachability.h</DeclaredIn>			
			
			<Declaration>@property (atomic, readonly, assign) BOOL initialized</Declaration>
			
			
			<Anchor>//api/name/initialized</Anchor>
		</Token>
		
	</File>
</Tokens>