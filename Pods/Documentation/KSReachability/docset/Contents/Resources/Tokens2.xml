<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/KSReachableOperation.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/KSReachableOperation</TokenIdentifier>
			<Abstract>A one-time operation to perform as soon as a host is deemed reachable.
The operation will only be performed once, regardless of how many times a
host becomes reachable.</Abstract>
			<DeclaredIn>KSReachability.h</DeclaredIn>
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/KSReachableOperation/operationWithHost:allowWWAN:onReachabilityAchieved:</TokenIdentifier>
			<Abstract>Constructor. Returns nil if an initialization error occurs.</Abstract>
			<DeclaredIn>KSReachability.h</DeclaredIn>			
			
			<Declaration>+ (KSReachableOperation *)operationWithHost:(NSString *)hostname allowWWAN:(BOOL)allowWWAN onReachabilityAchieved:(dispatch_block_t)onReachabilityAchieved</Declaration>
			<Parameters>
				<Parameter>
					<Name>hostname</Name>
					<Abstract>The name or IP address of the host to monitor. If nil or
empty string, check reachability to the internet in general.
If hostname is a URL string, it will use the host portion.</Abstract>
				</Parameter><Parameter>
					<Name>allowWWAN</Name>
					<Abstract>If NO, a WWAN-only connection is not enough to trigger
this operation.</Abstract>
				</Parameter><Parameter>
					<Name>onReachabilityAchieved</Name>
					<Abstract>Invoke when the host becomes reachable.
This will be invoked ONE TIME ONLY, no matter
how many times reachability changes.
Block will be invoked on the main thread.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/operationWithHost:allowWWAN:onReachabilityAchieved:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/KSReachableOperation/operationWithReachability:allowWWAN:onReachabilityAchieved:</TokenIdentifier>
			<Abstract>Constructor. Returns nil if an initialization error occurs.</Abstract>
			<DeclaredIn>KSReachability.h</DeclaredIn>			
			
			<Declaration>+ (KSReachableOperation *)operationWithReachability:(KSReachability *)reachability allowWWAN:(BOOL)allowWWAN onReachabilityAchieved:(dispatch_block_t)onReachabilityAchieved</Declaration>
			<Parameters>
				<Parameter>
					<Name>reachability</Name>
					<Abstract>A reachability instance. Note: This object will overwrite
the onReachabilityChanged property.</Abstract>
				</Parameter><Parameter>
					<Name>allowWWAN</Name>
					<Abstract>If NO, a WWAN-only connection is not enough to trigger
this operation.</Abstract>
				</Parameter><Parameter>
					<Name>onReachabilityAchieved</Name>
					<Abstract>Invoke when the host becomes reachable.
This will be invoked ONE TIME ONLY, no matter
how many times reachability changes.
Block will be invoked on the main thread.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/operationWithReachability:allowWWAN:onReachabilityAchieved:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KSReachableOperation/initWithHost:allowWWAN:onReachabilityAchieved:</TokenIdentifier>
			<Abstract>Initializer. Returns nil if an initialization error occurs.</Abstract>
			<DeclaredIn>KSReachability.h</DeclaredIn>			
			
			<Declaration>- (id)initWithHost:(NSString *)hostname allowWWAN:(BOOL)allowWWAN onReachabilityAchieved:(dispatch_block_t)onReachabilityAchieved</Declaration>
			<Parameters>
				<Parameter>
					<Name>hostname</Name>
					<Abstract>The name or IP address of the host to monitor. If nil or
empty string, check reachability to the internet in general.
If hostname is a URL string, it will use the host portion.</Abstract>
				</Parameter><Parameter>
					<Name>allowWWAN</Name>
					<Abstract>If NO, a WWAN-only connection is not enough to trigger
this operation.</Abstract>
				</Parameter><Parameter>
					<Name>onReachabilityAchieved</Name>
					<Abstract>Invoke when the host becomes reachable.
This will be invoked ONE TIME ONLY, no matter
how many times reachability changes.
Block will be invoked on the main thread.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithHost:allowWWAN:onReachabilityAchieved:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KSReachableOperation/initWithReachability:allowWWAN:onReachabilityAchieved:</TokenIdentifier>
			<Abstract>Initializer. Returns nil if an initialization error occurs.</Abstract>
			<DeclaredIn>KSReachability.h</DeclaredIn>			
			
			<Declaration>- (id)initWithReachability:(KSReachability *)reachability allowWWAN:(BOOL)allowWWAN onReachabilityAchieved:(dispatch_block_t)onReachabilityAchieved</Declaration>
			<Parameters>
				<Parameter>
					<Name>reachability</Name>
					<Abstract>A reachability instance. Note: This object will overwrite
the onReachabilityChanged property.</Abstract>
				</Parameter><Parameter>
					<Name>allowWWAN</Name>
					<Abstract>If NO, a WWAN-only connection is not enough to trigger
this operation.</Abstract>
				</Parameter><Parameter>
					<Name>onReachabilityAchieved</Name>
					<Abstract>Invoke when the host becomes reachable.
This will be invoked ONE TIME ONLY, no matter
how many times reachability changes.
Block will be invoked on the main thread.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithReachability:allowWWAN:onReachabilityAchieved:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KSReachableOperation/reachability</TokenIdentifier>
			<Abstract>Access to internal reachability instance. Use this to monitor for errors.</Abstract>
			<DeclaredIn>KSReachability.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly, retain) KSReachability *reachability</Declaration>
			
			
			<Anchor>//api/name/reachability</Anchor>
		</Token>
		
	</File>
</Tokens>